(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2133e2"],{ac9c:function(t,e,s){"use strict";s.r(e);var o=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"sun-doc-toast sun-doc-content"},[s("section",[s("h1",[t._v("Toast 轻提示")]),t._m(0),s("div",{staticClass:"card"},[s("h3",[t._v("引入")]),s("div",{directives:[{name:"highlight",rawName:"v-highlight"}]},[s("pre",[s("code",{domProps:{innerHTML:t._s(t.importCode)}})])])]),s("h2",[t._v("代码展示")]),t._l(t.cartList,(function(e,o){return s("div",{key:o,staticClass:"card"},[s("h3",[t._v(t._s(e.title))]),s("p",{domProps:{innerHTML:t._s(e.desc)}}),s("div",{directives:[{name:"highlight",rawName:"v-highlight"}]},[s("pre",[s("code",{staticClass:"language-js",domProps:{textContent:t._s(e.code)}})])])])})),s("h2",[t._v("API")]),s("div",{staticClass:"card"},[s("h3",[t._v("方法")]),s("table",[t._m(1),s("tbody",t._l(t.methodList,(function(e,o){return s("tr",{key:o},[s("td",[t._v(t._s(e.propName))]),s("td",{domProps:{innerHTML:t._s(e.desc)}}),s("td",[s("span",{staticClass:"info-string"},[t._v(t._s(e.type))])]),s("td",["-"===e.default?s("span",[t._v(t._s(e.default))]):s("code",[t._v(t._s(e.default))])])])})),0)])]),s("div",{staticClass:"card"},[s("h3",[t._v("Options")]),s("table",[t._m(2),s("tbody",t._l(t.optionList,(function(e,o){return s("tr",{key:o},[s("td",[t._v(t._s(e.propName))]),s("td",{domProps:{innerHTML:t._s(e.desc)}}),s("td",[s("span",{staticClass:"info-string"},[t._v(t._s(e.type))])]),s("td",["-"===e.default?s("span",[t._v(t._s(e.default))]):s("code",[t._v(t._s(e.default))])])])})),0)])])],2)])},a=[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"card"},[s("h3",[t._v("介绍")]),s("div",[t._v(" 在页面中间弹出黑色半透明提示，用于消息通知、加载提示、操作结果提示等场景。 ")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("thead",[s("tr",[s("th",[t._v("方法名")]),s("th",[t._v("说明")]),s("th",[t._v("参数")]),s("th",[t._v("返回值")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("thead",[s("tr",[s("th",[t._v("参数")]),s("th",[t._v("说明")]),s("th",[t._v("类型")]),s("th",[t._v("默认值")])])])}],n={data:function(){return{importCode:"import Vue from 'vue';\nimport { Toast } from 'vue-sun-ui';\n\nVue.use(Toast);",methodList:[{propName:"Toast",desc:"展示提示\t",type:"options | message",default:"toast 实例"},{propName:"Toast.loading",desc:"展示加载提示\t",type:"options | message",default:"toast 实例"},{propName:"Toast.success",desc:"展示成功提示",type:"options | message",default:"toast 实例"},{propName:"Toast.fail",desc:"展示失败提示\t",type:"options | message",default:"toast 实例"},{propName:"Toast.clear",desc:"关闭提示",type:"-",default:"void"}],optionList:[{propName:"type",desc:"提示类型，可选值为 <code>loading</code> <code>success</code> <code>fail</code>",type:"string",default:"text"},{propName:"position",desc:"位置，可选值为 <code>top</code> <code>bottom</code>\t",type:"string",default:"center"},{propName:"message",desc:"文本内容",type:"string",default:'"'},{propName:"icon",desc:'自定义图标，支持传入<a href="#/icon">图标名称</a>或图片链接',type:"string",default:'"'},{propName:"iconPrefix",desc:"图标类名前缀",type:"string",default:"sun-icon"},{propName:"overlay",desc:"是否显示背景遮罩层",type:"boolean",default:"false"},{propName:"closeOnClick",desc:"是否在点击后关闭",type:"boolean",default:"false"},{propName:"duration",desc:"展示时长(ms)",type:"number",default:"1500"},{propName:"className",desc:"自定义类名",type:"string",default:"sun-toast"},{propName:"onOpened",desc:"完全展示后的回调函数",type:"Function",default:"-"},{propName:"onClose",desc:"关闭时的回调函数",type:"Function",default:"-"}],cartList:[{title:"文字提示",desc:"Layout 组件提供了<code>24列栅格</code>，通过在<code>Col</code>上添加<code>span</code>属性设置列所占的宽度百分比此外，添加<code>offset</code>属性可以设置列的偏移宽度，计算方式与 span 相同",code:"Toast('提示内容');"},{title:"加载提示",desc:"使用 <code>Toast.loading</code> 方法展示加载提示。",code:"Toast.loading({\n  message: '加载中...'\n});"},{title:"成功/失败提示",desc:"使用 <code>Toast.success</code> 方法展示成功提示，使用 <code>Toast.fail</code> 方法展示失败提示。",code:"Toast.success('成功提示');\nToast.fail('失败提示');"},{title:"自定义图标",desc:"通过<code>icon</code>选项可以自定义图标，支持传入图标名称或图片链接，如果在loading方法中使用<code>icon</code>属性可以自定义加载图标。",code:"Toast({\n  message: '自定义图标',\n  icon: 'like-o',\n});\n\nToast({\n  message: '自定义图片',\n  icon: 'https://img.yzcdn.cn/vant/logo.png',\n});\n\n// 自定义加载图标\nToast.loading({\n  message: '加载中...',\n  icon:'loading2'\n});"},{title:"自定义位置",desc:"Toast 默认渲染在屏幕正中位置，通过<code>position</code>属性可以控制 Toast 展示的位置。",code:"Toast({\n  message: '顶部展示',\n  position: 'top',\n});\n\nToast({\n  message: '底部展示',\n  position: 'bottom',\n});"},{title:"全局方法",desc:"引入 Toast 组件后，会自动在 Vue 的 prototype 上挂载<code>$toast</code>方法，便于在组件内调用。",code:"export default {\n  mounted() {\n    this.$toast('提示文案');\n  },\n};"},{title:"单例模式",desc:"Toast 采用单例模式，即同一时间只会存在一个 Toast，可以像下面这样手动关闭 Toast",code:"const toast1 = Toast('第一个 Toast');\nconst toast2 = Toast.success('第二个 Toast');\n\ntoast1.clear();\ntoast2.clear();"}]}}},d=n,c=s("2877"),i=Object(c["a"])(d,o,a,!1,null,null,null);e["default"]=i.exports}}]);
//# sourceMappingURL=chunk-2d2133e2.e1995b15.js.map